image: 
  - macos
  - Ubuntu
  
version: 1.8.4.{build}

branches:
    only:
        - master

only_commits:
    files:
        - trigger
        - appveyor.yml

environment:
    GOVERSION: 1.16.5
    matrix:
        - GOOS: android
          GOARCH: arm
          CGO_ENABLED: 1
          GOARM: 7
          PREFIX: android-arm
          SUFFIX: 
          HOST: linux
        - GOOS: android
          GOARCH: arm64
          CGO_ENABLED: 1
          PREFIX: android-aarch64
          SUFFIX: 
          HOST: linux
        - GOOS: android
          GOARCH: 386
          CGO_ENABLED: 1
          PREFIX: android-386
          SUFFIX: 
          HOST: linux
        - GOOS: android
          GOARCH: amd64
          CGO_ENABLED: 1
          PREFIX: android-amd64
          SUFFIX: 
          HOST: linux
        - GOOS: windows
          GOARCH: amd64
          PREFIX: windows-amd64
          SUFFIX: .exe
          HOST: linux
        - GOOS: darwin
          GOARCH: amd64
          CGO_ENABLED: 1
          PREFIX: darwin-amd64
          SUFFIX: 
          HOST: darwin
        - GOOS: darwin
          GOARCH: arm64
          CGO_ENABLED: 1
          PREFIX: darwin-arm64
          SUFFIX: 
          HOST: darwin
        - GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
          PREFIX: linux-amd64
          SUFFIX: 
          HOST: linux
        - GOOS: freebsd
          GOARCH: amd64
          PREFIX: freebsd-amd64
          SUFFIX: 
          HOST: linux
        - GOOS: netbsd
          GOARCH: amd64
          PREFIX: netbsd-amd64
          SUFFIX: 
          HOST: linux
        - GOOS: openbsd
          GOARCH: amd64
          PREFIX: openbsd-amd64
          SUFFIX: 
          HOST: linux
        - GOOS: dragonfly
          GOARCH: amd64
          PREFIX: dragonfly-amd64
          SUFFIX: 
          HOST: linux
        - GOOS: solaris
          GOARCH: amd64
          PREFIX: solaris-amd64
          SUFFIX: 
          HOST: linux
        - GOOS: windows
          GOARCH: 386
          PREFIX: windows-386
          SUFFIX: .exe
          HOST: linux
        - GOOS: linux
          GOARCH: 386
          CGO_ENABLED: 0
          PREFIX: linux-386
          SUFFIX: 
          HOST: linux
        - GOOS: freebsd
          GOARCH: 386
          PREFIX: freebsd-386
          SUFFIX: 
          HOST: linux
        - GOOS: netbsd
          GOARCH: 386
          PREFIX: netbsd-386
          SUFFIX: 
          HOST: linux
        - GOOS: openbsd
          GOARCH: 386
          PREFIX: openbsd-386
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: arm
          GOARM: 5
          PREFIX: linux-armv5
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: arm
          GOARM: 6
          PREFIX: linux-armv6
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: arm
          GOARM: 7
          PREFIX: linux-armv7
          SUFFIX: 
          HOST: linux
        - GOOS: freebsd
          GOARCH: arm
          PREFIX: freebsd-arm
          SUFFIX: 
          HOST: linux
        - GOOS: netbsd
          GOARCH: arm
          PREFIX: netbsd-arm
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: arm64
          PREFIX: linux-arm64
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: ppc64
          PREFIX: linux-ppc64
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: ppc64le
          PREFIX: linux-ppc64le
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: mips64
          GOMIPS: hardfloat
          PREFIX: linux-mips64-hardfloat
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: mips64
          GOMIPS: softfloat
          PREFIX: linux-mips64-softfloat
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: mips64le
          GOMIPS: hardfloat
          PREFIX: linux-mips64le-hardfloat
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: mips64le
          GOMIPS: softfloat
          PREFIX: linux-mips64le-softfloat
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: mips
          GOMIPS: hardfloat
          PREFIX: linux-mips-hardfloat
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: mips
          GOMIPS: softfloat
          PREFIX: linux-mips-softfloat
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: mipsle
          GOMIPS: hardfloat
          PREFIX: linux-mipsle-hardfloat
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: mipsle
          GOMIPS: softfloat
          PREFIX: linux-mipsle-softfloat
          SUFFIX: 
          HOST: linux
        - GOOS: linux
          GOARCH: s390x
          PREFIX: linux-s390x
          SUFFIX: 
          HOST: linux

matrix:
  exclude:
    - image: macos
      HOST: linux
    - image: Ubuntu
      HOST: darwin
      
clone_depth: 1

# scripts that run after cloning repository
install:
    - curl -O -L "https://storage.googleapis.com/golang/go$GOVERSION.$HOST-amd64.tar.gz"
    - tar xzf "go$GOVERSION.$HOST-amd64.tar.gz"
    - export GOROOT=$(pwd)/go
    - export PATH=$(pwd)/go/bin:$PATH
    - if [ "$HOST" = "darwin" ]; then brew install gnu-sed; export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export NDK_VERSION=r22b; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ARCH=`uname -m`; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_NDK_HOME=$APPVEYOR_BUILD_FOLDER/.android/android-ndk-$NDK_VERSION; if [ ! -d "$ANDROID_NDK_HOME" ]; then mkdir -p $ANDROID_NDK_HOME; fi; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then pushd $APPVEYOR_BUILD_FOLDER/.android; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then curl -L http://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-$ARCH.zip -o android-ndk-$NDK_VERSION-linux-$ARCH.zip; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then unzip -q android-ndk-$NDK_VERSION-linux-$ARCH.zip; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then ls -l; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then popd; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_ARM_CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi29-clang; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_ARM_CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi29-clang++; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_ARM_STRIP=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/arm-linux-androideabi-strip; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_X86_CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android29-clang; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_X86_CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android29-clang++; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_X86_STRIP=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android-strip; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_AARCH64_CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android29-clang; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_AARCH64_CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android29-clang++; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_AARCH64_STRIP=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-strip; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_X64_CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android29-clang; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_X64_CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android29-clang++; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export ANDROID_X64_STRIP=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android-strip; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" -a "$GOARCH" = "arm" ]; then export CC=$ANDROID_ARM_CC; CXX=$ANDROID_ARM_CXX; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" -a "$GOARCH" = "arm64" ]; then export CC=$ANDROID_AARCH64_CC; CXX=$ANDROID_AARCH64_CXX; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" -a "$GOARCH" = "386" ]; then export CC=$ANDROID_X86_CC; CXX=$ANDROID_X86_CXX; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" -a "$GOARCH" = "amd64" ]; then export CC=$ANDROID_X64_CC; CXX=$ANDROID_X64_CXX; fi
    - if [ "$GOOS" = "android" -a "$HOST" = "linux" ]; then export PATH=$ANDROID_NDK_HOME:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${PATH}; fi
    - export GO111MODULE=on
    - git clone --depth=1 https://github.com/coredns/coredns.git
    - git clone --depth=1 https://github.com/leiless/dnsredir.git
    - if [ "$HOST" = "darwin" ]; then cd dnsredir/pf && sudo ./download-pf-headers.sh; ls -l /usr/local/include/net; ls -l /usr/local/include/libkern; fi
    
# scripts that run before build
before_build:
    - go env
    - go version

# custom build scripts
build_script:
    - cd coredns
    - git apply "$APPVEYOR_BUILD_FOLDER/forward.go.patch"
    - git apply "$APPVEYOR_BUILD_FOLDER/forward-setup.go.patch"
    - sed -i.bak 's|forward:forward|fallback:github.com/missdeer/fallback\ndnsredir:github.com/leiless/dnsredir\nforward:forward\nproxy:github.com/missdeer/proxy|g' plugin.cfg
    - sed -i.bak 's|hosts:hosts|ads:github.com/c-mueller/ads\nblocklist:github.com/relekang/coredns-blocklist\nhosts:hosts|g' plugin.cfg
    - sed -i.bak 's|rewrite:rewrite|rewrite:rewrite\nbogus:github.com/missdeer/bogus\nipset:github.com/missdeer/ipset|g' plugin.cfg
    - sed -i.bak 's|cache:cache|cache:cache\nredisc:github.com/missdeer/redis|g' plugin.cfg
    - echo "replace (" >> go.mod
    - echo "    github.com/leiless/dnsredir => ../dnsredir" >> go.mod
    - echo ")" >> go.mod
    - sed -i.bak '/azure/d' plugin.cfg
    - sed -i.bak '/route53/d' plugin.cfg
    - sed -i.bak '/trace/d' plugin.cfg
    - sed -i.bak '/etcd/d' plugin.cfg
    - cat plugin.cfg
    - if [ "$HOST" = "darwin" ]; then env CGO_ENABLED=1 go generate coredns.go; else env CGO_ENABLED=0 GOOS=$HOST GOARCH=amd64 go generate coredns.go; fi
    - if [ "$HOST" = "darwin" ]; then env CGO_ENABLED=1 go get; else env CGO_ENABLED=0 GOOS=$HOST GOARCH=amd64 go get; fi
    - make CGO_ENABLED=$CGO_ENABLED
    - if [ "$GOOS" = "linux" -a "$HOST" = "linux" -a "$GOARCH" = "amd64" ]; then ./coredns -plugins; fi
    - if [ "$GOOS" = "darwin" -a "$HOST" = "darwin" -a "$GOARCH" = "amd64" ]; then ./coredns -plugins; fi
    - cd ..

# scripts that run after build
after_build:
    - mkdir -p "distrib/coredns-$PREFIX" 
    - cp "$APPVEYOR_BUILD_FOLDER/coredns/coredns" "distrib/coredns-$PREFIX/coredns$SUFFIX"
    - cp "$APPVEYOR_BUILD_FOLDER/coredns/coredns" "distrib/coredns$SUFFIX"
    - if [ "$GOOS" = "windows" ]; then cp "$APPVEYOR_BUILD_FOLDER/coredns.exe.manifest" "distrib/coredns-$PREFIX/coredns.exe.manifest"; fi
    - cd distrib
    - curl -sSL git.io/corefile | bash
    - mv Corefile "coredns-$PREFIX/Corefile"
    - zip -r "coredns-$PREFIX.zip" "coredns-$PREFIX" 
    - zip -r coredns.zip "coredns$SUFFIX"
    - md5sum "coredns$SUFFIX"
    - sha1sum "coredns$SUFFIX"
    - sha224sum "coredns$SUFFIX"
    - sha256sum "coredns$SUFFIX"
    - sha384sum "coredns$SUFFIX"
    - sha512sum "coredns$SUFFIX"
    - md5sum coredns.zip
    - sha1sum coredns.zip
    - sha224sum coredns.zip
    - sha256sum coredns.zip
    - sha384sum coredns.zip
    - sha512sum coredns.zip

artifacts:
    - path: distrib/coredns-$PREFIX.zip
      name: full_package
    - path: distrib/coredns.zip
      name: exe_only
